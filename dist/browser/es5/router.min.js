"use strict";function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _slicedToArray(t,r){return _arrayWithHoles(t)||_iterableToArrayLimit(t,r)||_unsupportedIterableToArray(t,r)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,r){if(t){if("string"==typeof t)return _arrayLikeToArray(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);return"Map"===(e="Object"===e&&t.constructor?t.constructor.name:e)||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?_arrayLikeToArray(t,r):void 0}}function _arrayLikeToArray(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function _iterableToArrayLimit(t,r){var e=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=e){var n,o,a=[],i=!0,u=!1;try{for(e=e.call(t);!(i=(n=e.next()).done)&&(a.push(n.value),!r||a.length!==r);i=!0);}catch(t){u=!0,o=t}finally{try{i||null==e.return||e.return()}finally{if(u)throw o}}return a}}function _arrayWithHoles(t){if(Array.isArray(t))return t}function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function router(i){if(!Array.isArray(i)||!i.every(function(t){return t&&"object"===_typeof(t)&&(null==t.regex||t.regex instanceof RegExp)&&"function"==typeof t.callback}))throw"Invalid Argument: routes. Must be an array of { regex, callback } object where regex is an instance of RegEx and callback if of function type.";return{route:function(){for(var t=0,r=i.length;t<r;t++){var e=i[t],n=e.regex,n=void 0===n?/.*/:n,e=e.callback,o=_slicedToArray(window.location.hash?decodeURI(window.location.hash).substring(1).split("?"):[""],2),a=o[0],o=o[1],n=n.exec(a);if(n){e.call.apply(e,[this].concat(_toConsumableArray(n),[o]));break}}return this},start:function(){var t=this;if(this.listender)throw"Router Already Started.";return this.listender=function(){t.route()},window.addEventListener("popstate",this.listender),this.route()},end:function(){if(!this.listender)throw"Router Not Started.";return window.removeEventListener("popstate",this.listender),delete this.listender,this},pushRoute:function(t){if("string"!=typeof t)throw"Invalid Argument: path. Must be string type.";return window.history.pushState({},t,"#".concat(t)),this.route()},replaceRoute:function(t){if("string"!=typeof t)throw"Invalid Argument: path. Must be string type.";return window.history.replaceState({},t,"#".concat(t)),this.route()},routeBack:function(){return window.history.back(),this}}}
//# sourceMappingURL=router.min.js.map
